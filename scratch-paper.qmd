---
title: "Scratch-Paper"
author: "Graycen Mahon"
format: html
---

## knitr set up options for an RMarkdown document:

```{r knitr-example, eval = FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```

# Set up

```{r libraries}
# should haves (from last week)
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar) # or equivalent
library(flextable) # or equivalent
library(car)
library(broom)
# would be nice to have
library(corrplot)
library(AICcmodavg)
library(GGally)
```

# Read in the data:

```{r reading-data}
plant <- read_csv(here("hf109-01-sarracenia.csv")) %>% 
  # make the column names cleaner
  clean_names() %>% 
  # selecting the columns of interest
  select(totmass, species, feedlevel, sla, chlorophyll, amass, num_lvs, num_phylls)
```

# Visualize the missing data:

```{r missing-data-visualization}
gg_miss_var(plant)
```

# Subsetting the data by dropping NAs:

```{r subset-drop-NA}
plant_subset <- plant %>% 
  drop_na(sla, chlorophyll, amass, num_lvs, num_phylls)
```

# Create a correlation plot:  

(example writing) To determine the relationships between numerical variables in our dataset, we calculated Pearsons r and visually represented correlation using a correlation plot.

```{r correlation-plot}
# calculate Pearson's r for numerical values only
plant_cor <- plant_subset %>% 
  select(feedlevel:num_phylls) %>% 
  cor(method = "pearson")
  
# creating a correlation plot
corrplot(plant_cor,
         # change the shape of what's in the cells
         method = "ellipse",
         addCoef.col = "black"
         )
```

# Create a plot of each varable compared against the others 

```{r pairs-plot}
plant_subset %>% 
  select(species:num_phylls) %>% 
  ggpairs()
```

# Starting regression here:  

(example) To determine how species and physiological characteristics predict biomass, we fit multiple linear models.

```{r null-and-full-models}
null <- lm(totmass ~ 1, data = plant_subset)
full <- lm(totmass ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)
```

# Diagnostics

We visually assess normality and homoskedasticity of residuals using diagnostic plots for the full model:

```{r full-diagnostics}
par(mfrow = c(2, 2))
plot(full)
```

We also tested for normality using the Shapiro-Wilk test (null hypothesis: variable of interest (i.e. the residuals) are normally distributed).  

We tested for heteroskedasticity using the Breusch-Pagan test (null hypothesis: variable of interest has constant variance).
```{r}
check_normality(full)
check_heteroscedasticity(full)
```

```{r}
null_log <- lm(log(totmass) ~ 1, data = plant_subset)
full_log <- lm(log(totmass) ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)

plot(full_log)
check_normality(full_log)
check_heteroscedasticity(full_log)
```


Evaluate multicollinearity:

```{r calculate-vif}
car::vif(full_log)
```

We evaluated multicollinearity by calculating generalized variance inflation factor and determined that...

Try some more models:

addressing the question: what set of predictor variables best explains the response?

```{r}
model2_log <- lm(log(totmass) ~ species, data = plant_subset)
```

check assumptions for model 2:
```{r}
plot(model2_log)
# they are clumped in this way becuase the predictors are categorical, you just want to see an even distribution of normal variables

check_normality(model2_log)
check_heteroscedasticity(model2_log)
```

compare models. using Akaike's information criterion (AIC) values

```{r}
AICc(full_log)
AICc(model2_log)
AICc(null_log) 

MuMIn::AICc(full_log, model2_log, null_log)
MuMIn::model.sel(full_log, model2_log, null_log)
```

based on the AICc values, the full model has the loswet value and therefore is the best predictor of...

# Results

We found that the _____ model including ____ ___ ___ predictors best predicted _____ (model summary).

```{r}
summary(full_log)

tables <- tidy(full_log, conf.int = TRUE) %>% 
  # change the p value numbers if they are really small
  # change the estimates, standard error and t-statistics to round to ___ numbers
  # using mutate
  # make into a flex table
  flextable() %>% 
  # fit into  the viewer
  autofit()

table
```

use gg predict to back transform estimates

```{r}
model_pred <- ggpredict(full_log, terms = "species", back.transform = TRUE)

plot(ggpredict(full_log, terms = "species", back.transform = TRUE), add.data = TRUE)

plot(ggpredict(full_log, terms = "chlorophyll", back.transform = TRUE), add.data = TRUE)

plot(ggpredict(full_log, terms = "sla", back.transform = TRUE), add.data = TRUE)

model_pred
```

# Differemt types of anovas

```{r}

```

