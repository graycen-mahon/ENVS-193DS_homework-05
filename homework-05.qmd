---
title: "homework-05"
author: "Graycen Mahon"
format: html
editor: visual
---

## knitr set up options for an RMarkdown document:

```{r knitr-example, eval = FALSE}
knitr::opts_chunk$set(echo = TRUE, message = FALSE, warning = FALSE)
```

## Organize Packages using the here package

```{r file-organization}
here::here("Users/graycenmahon/Downloads/GitHub/ENVS-193DS_homework-05")
```

## Set up

```{r packages!}
# should haves (from last week)
library(tidyverse)
library(here)
library(janitor)
library(ggeffects)
library(performance)
library(naniar) # or equivalent
library(flextable) # or equivalent
library(car)
library(broom)
# would be nice to have
library(corrplot)
library(AICcmodavg)
library(GGally)
```


## Reading in the dataset:

```{r reading-in-data}
plant <- read_csv("hf109-01-sarracenia.csv") %>% 
  # using the function clean names, you can alter the format of the column names and use an underscore rather than a period
clean_names() %>% 
# then, using the select function, you can choose the variables we are interested in
select(totmass, species, feedlevel, sla, chlorophyll, amass, num_lvs, num_phylls)
```

## Visualize the missing data:

```{r missing-data-visualization}
gg_miss_var(plant) + labs(caption = "This plot shows the missing data points for the variables in question in the plant data frame. Chlorophyll content, photosynthetic rate, and Spcific Leaf Area are missing the most data points (about 10-15) while there is little to none missing for the other Sarracenia characteristics observed for the study.")
```

## Creating a Subset of the dataframe and omitting the NA (missing data values)

```{r subset-drop-NA}
plant_subset <- plant %>% 
  drop_na(sla, chlorophyll, amass, num_lvs, num_phylls)
```

## Create a correlation plot:  

```{r correlation-plot}
# calculate Pearson's r for numerical values only
plant_cor <- plant_subset %>% 
  select(feedlevel:num_phylls) %>% 
  cor(method = "pearson")
  
# creating a correlation plot
corrplot(plant_cor,
         # change the shape of what's in the cells
         method = "ellipse",
         addCoef.col = "black")
  title(sub = "This correlation plot shows that there is a fairly even ditribution of both poswitive and negative linear correlations between the variables in the data subset. The red ovals shows a negative value, meaning there is a negative correlation between the variables in the column & row while the blue ovals are a positive correlation. Diagonally you can see boxes with +1 and a line drawn through them, this is because it is the comparison of the same variables. Boxes with a 0 are variables with no correlation at all.")
```

## Create a plot of each variable compared against the others 

```{r pairs-plot}
plant_subset %>% 
  select(species:num_phylls) %>% 
  ggpairs() + labs(caption = "This plot shows the comparison of variables to one another in multiple different plots. The center diagonal plots shows the density plot for each variable. The plots below the diagonals is the scatterplot for each pair of variables. Finally, the plots above the diagonal is the Pearson correlation for each pair of variables.")
```

## Starting regression here:  

(example) To determine how species and physiological characteristics predict biomass, we fit multiple linear models.

```{r null-and-full-models}
null <- lm(totmass ~ 1, data = plant_subset)
full <- lm(totmass ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)
```

## Diagnostics

We visually assess normality and homoskedasticity of residuals using diagnostic plots for the full model:

```{r full-diagnostics}
par(mfrow = c(2, 2))
plot(full)
```

We also tested for normality using the Shapiro-Wilk test (null hypothesis: variable of interest (i.e. the residuals) are normally distributed).  

We tested for heteroskedasticity using the Breusch-Pagan test (null hypothesis: variable of interest has constant variance).
```{r}
check_normality(full)
check_heteroscedasticity(full)
```

```{r}
null_log <- lm(log(totmass) ~ 1, data = plant_subset)
full_log <- lm(log(totmass) ~ species + feedlevel + sla + chlorophyll + amass + num_lvs + num_phylls, data = plant_subset)

plot(full_log)
check_normality(full_log)
check_heteroscedasticity(full_log)
```

## Evaluate multicollinearity:

```{r calculate-vif}
car::vif(full_log)
```

We evaluated multicollinearity by calculating generalized variance inflation factor and determined that...

## Try some more models:

addressing the question: what set of predictor variables best explains the response?

```{r Creating-another-model}
model_2_log <- lm(log(totmass) ~ species, data = plant_subset)
```

```{r Creating-another-model}
model_3_log <- lm(log(amass)~ species, data = plant_subset)
```

```{r Creating-another-model}
model_4_log <- lm(log(num_lvs) ~ species, data = plant_subset)
```

## Check assumptions for models 2-4:

```{r}
plot(model_2_log)
# they are clumped in this way because the predictors are categorical, you just want to see an even distribution of normal variables

check_normality(model_2_log)
check_heteroscedasticity(model_2_log)
```

```{r}
plot(model_3_log)
# they are clumped in this way becuase the predictors are categorical, you just want to see an even distribution of normal variables

check_normality(model_3_log)
check_heteroscedasticity(model_3_log)
```

```{r}
plot(model_4_log)
# they are clumped in this way becuase the predictors are categorical, you just want to see an even distribution of normal variables

check_normality(model_4_log)
check_heteroscedasticity(model_4_log)
```

